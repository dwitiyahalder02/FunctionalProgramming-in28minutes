package functionalprogramming.structre;

import java.util.Arrays;
import java.util.List;

public class FP01Functional {

	public static void main(String args[])
	{
		printAllStructreListinFunctional(Arrays.asList(1,2,3,4,9,8));
	}
	private static void print(int no)
	{
		System.out.println(no);
	}
	private static boolean isEven(int no)
	{
		return no%2==0;
	}

	private static void printAllStructreListinFunctional(List<Integer> number) {
		// TODO Auto-generated method stub
		//how to loop the numbers
//		for(int i:number)
//		{
//			System.out.println(i);
//		}
//		
		//for functional approach try to convert the numbers in streams.
		//number.stream().forEach(FP01Functional::print);//static method reference here FP01Functional is the class and print is the static method.
		//number.stream().forEach(t->System.out.println(t)); //by lambda
		number.stream().forEach(System.out::println);
	}
	private static void printEvenNumberFunctional(List<Integer> number) {
		// TODO Auto-generated method stub
		//how to loop the numbers
		//only allow even numbers. add filter
			  number.stream()
					.filter(FP01Functional::isEven)
					.forEach(System.out::println);
		
}
