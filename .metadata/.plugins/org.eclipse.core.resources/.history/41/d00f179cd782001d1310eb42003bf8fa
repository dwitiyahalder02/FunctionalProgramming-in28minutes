package functionalprogramming.structre;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Optional;
import java.util.function.BinaryOperator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class FP05BehaviourParameterization {
	
	
	public static void main(String args[])
	{
		//printAllStructreList(Arrays.asList(1,2,3,4,9,8));
		//printEvenNumberStructreList(Arrays.asList(2,4,6,7,1,9));
		List<Integer> numbers = Arrays.asList(2,4,6,7,1,9,9,4,6);
		Predicate<? super Integer> evenpredicate = x->x%2==0;
		numbers.stream()
				.filter(evenpredicate)
				.forEach(System.out::println);
		
		numbers.stream()
		.filter(x->x%2==1)
		.forEach(System.out::println);

	}

	
}
